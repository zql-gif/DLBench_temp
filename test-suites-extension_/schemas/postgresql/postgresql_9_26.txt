SELECT CASE WHEN FALSE THEN 'ERROR' ELSE 'this' END, CASE WHEN TRUE THEN 'is' ELSE 'ERROR' END, CASE WHEN NULL THEN 'ERROR' ELSE 'a' END, (CASE WHEN TRUE THEN 2 ELSE 3 END), (CASE WHEN TRUE THEN 2.0 ELSE 3.0 END) + 0; -- AE
DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (st varchar(255) NOT NULL, u int NOT NULL);
INSERT INTO t1 VALUES ('a',1),('A',1),('aa',1),('AA',1),('a',1),('aaa',0),('BBB',0);
SELECT CASE WHEN TRUE THEN st ELSE st END AS s FROM t1 ORDER BY s;
SELECT CASE WHEN u = 1 THEN st ELSE st END AS s FROM t1 ORDER BY s;
ANALYZE t1; -- AE
select nullif(u, 1) from t1;
explain select nullif(u, 1) from t1; -- AE
drop table t1;
create table t1 (num  decimal(12,2));
insert into t1 values (144.54);
SELECT SUM(CASE WHEN num IS NULL THEN 0.00 ELSE num END) FROM t1;
drop table t1;
create table t1 (x int, y int);
insert into t1 values (0,6),(10,16),(20,26),(30,10),(40,46),(50,56);
SELECT MIN(CASE WHEN y - x > 5 THEN y ELSE NULL END), MAX(CASE WHEN y - x > 5 THEN y ELSE NULL END) FROM t1;
drop table t1;
SELECT NULLIF(5,5) IS NULL, NULLIF(5,5) IS NOT NULL; -- AE
CREATE TABLE t1 (id int NOT NULL , date int default NULL, text varchar(32) NOT NULL);
INSERT INTO t1 VALUES (1,1110000000,'Day 1'),(2,1111000000,'Day 2'),(3,1112000000,'Day 3');
SELECT id, CASE WHEN date IS NULL THEN '-' ELSE TO_CHAR(TO_TIMESTAMP(date), 'DD-MM-YYYY') END AS date_ord, text FROM t1 ORDER BY date_ord ASC;
SELECT id, CASE WHEN date IS NULL THEN '-' ELSE TO_CHAR(TO_TIMESTAMP(date), 'DD-MM-YYYY') END AS date_ord, text FROM t1 ORDER BY date_ord DESC;
DROP TABLE t1;
CREATE TABLE t1 (c TEXT);
INSERT INTO t1 VALUES(1), (2), (3), (4), ('1234567890123456789');
SELECT * FROM (SELECT MAX(CASE WHEN TRUE THEN CAST(c AS NUMERIC) ELSE 0 END) FROM t1) AS te;
